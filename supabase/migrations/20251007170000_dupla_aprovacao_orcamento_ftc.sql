-- Migration: Sistema de Dupla Aprova√ß√£o (Or√ßamento + Ficha T√©cnica)
-- Cliente precisa aprovar AMBOS antes do PCP receber a requisi√ß√£o
-- Aprova√ß√µes podem ser feitas em qualquer ordem

-- ============================================================
-- 1. FUN√á√ÉO REUTILIZ√ÅVEL: Criar requisi√ß√£o (chamada por ambos os triggers)
-- ============================================================
CREATE OR REPLACE FUNCTION criar_requisicao_apos_dupla_aprovacao(p_numero_ftc TEXT)
RETURNS VOID
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  v_ficha_id UUID;
  v_tipo_requisicao TEXT;
  v_requisicao_id UUID;
  v_materiais_corte INTEGER;
  v_orcamento_aprovado BOOLEAN;
  v_ftc_aprovada BOOLEAN;
BEGIN
  -- Buscar ficha e verificar AMBAS aprova√ß√µes
  SELECT
    id,
    aprovado_orcamento_cliente,
    aprovado_ftc_cliente
  INTO
    v_ficha_id,
    v_orcamento_aprovado,
    v_ftc_aprovada
  FROM fichas_tecnicas
  WHERE numero_ftc = p_numero_ftc
    AND status = 'orcamento_enviado_cliente';

  -- Se n√£o encontrou ficha ou status errado, abortar
  IF v_ficha_id IS NULL THEN
    RAISE NOTICE 'FTC % n√£o encontrada ou status diferente de orcamento_enviado_cliente', p_numero_ftc;
    RETURN;
  END IF;

  -- Verificar se AMBAS aprova√ß√µes foram feitas
  IF v_orcamento_aprovado = true AND v_ftc_aprovada = true THEN

    RAISE NOTICE '‚úÖ DUPLA APROVA√á√ÉO completa para FTC %! Criando requisi√ß√£o...', p_numero_ftc;

    -- Atualizar status da ficha
    UPDATE fichas_tecnicas
    SET
      status = 'orcamento_aprovado_cliente',
      data_ultima_edicao = NOW()
    WHERE id = v_ficha_id;

    -- Determinar tipo de requisi√ß√£o baseado em materiais
    SELECT COUNT(*)
    INTO v_materiais_corte
    FROM materiais
    WHERE ficha_id = v_ficha_id
      AND (
        descricao ILIKE '%chapa%'
        OR descricao ILIKE '%barra%'
        OR descricao ILIKE '%tubo%'
      );

    IF v_materiais_corte > 0 THEN
      v_tipo_requisicao := 'corte';
    ELSE
      v_tipo_requisicao := 'compra';
    END IF;

    -- Criar requisi√ß√£o de compra
    INSERT INTO requisicoes_compra (
      ficha_id,
      numero_ftc,
      tipo,
      status,
      observacoes
    ) VALUES (
      v_ficha_id,
      p_numero_ftc,
      v_tipo_requisicao,
      'aguardando_pcp',
      'Requisi√ß√£o criada ap√≥s dupla aprova√ß√£o (Or√ßamento + Ficha T√©cnica)'
    )
    RETURNING id INTO v_requisicao_id;

    -- Criar entrada em aprovacoes_pcp
    INSERT INTO aprovacoes_pcp (
      requisicao_id,
      ficha_id,
      numero_ftc,
      tipo,
      status,
      observacoes
    ) VALUES (
      v_requisicao_id,
      v_ficha_id,
      p_numero_ftc,
      v_tipo_requisicao,
      'aguardando',
      'Aguardando valida√ß√£o do PCP (medidas, desenho, processos, material)'
    );

    RAISE NOTICE '‚úÖ Requisi√ß√£o % criada para PCP validar (tipo: %)', v_requisicao_id, v_tipo_requisicao;

  ELSE
    RAISE NOTICE '‚è≥ FTC % aguardando segunda aprova√ß√£o (Or√ßamento: %, FTC: %)',
                 p_numero_ftc, v_orcamento_aprovado, v_ftc_aprovada;
  END IF;
END;
$$;

COMMENT ON FUNCTION criar_requisicao_apos_dupla_aprovacao IS
'Cria requisi√ß√£o para PCP apenas quando AMBAS aprova√ß√µes (or√ßamento + ficha t√©cnica) foram feitas';

-- ============================================================
-- 2. TRIGGER: Aprova√ß√£o de OR√áAMENTO pelo cliente
-- ============================================================
CREATE OR REPLACE FUNCTION trigger_aprovacao_orcamento()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  v_ficha_id UUID;
BEGIN
  -- S√≥ processar se for tipo 'aprovar'
  IF NEW.tipo = 'aprovar' THEN

    -- Buscar ID da ficha
    SELECT id INTO v_ficha_id
    FROM fichas_tecnicas
    WHERE numero_ftc = NEW.numero_ftc;

    IF v_ficha_id IS NOT NULL THEN

      -- Marcar or√ßamento como aprovado
      UPDATE fichas_tecnicas
      SET
        aprovado_orcamento_cliente = true,
        data_aprovacao_orcamento_cliente = NOW(),
        data_ultima_edicao = NOW()
      WHERE id = v_ficha_id;

      RAISE NOTICE 'üí∞ Or√ßamento aprovado para FTC %', NEW.numero_ftc;

      -- Tentar criar requisi√ß√£o (s√≥ cria se FTC tamb√©m aprovada)
      PERFORM criar_requisicao_apos_dupla_aprovacao(NEW.numero_ftc);
    END IF;

  END IF;

  RETURN NEW;
END;
$$;

-- Criar trigger em aprovacoes_orcamento_cliente
DROP TRIGGER IF EXISTS trigger_aprovacao_orcamento ON aprovacoes_orcamento_cliente;

CREATE TRIGGER trigger_aprovacao_orcamento
  AFTER INSERT ON aprovacoes_orcamento_cliente
  FOR EACH ROW
  EXECUTE FUNCTION trigger_aprovacao_orcamento();

COMMENT ON TRIGGER trigger_aprovacao_orcamento ON aprovacoes_orcamento_cliente IS
'Marca or√ßamento como aprovado e verifica se pode criar requisi√ß√£o para PCP';

-- ============================================================
-- 3. TRIGGER: Aprova√ß√£o de FICHA T√âCNICA pelo cliente
-- ============================================================
CREATE OR REPLACE FUNCTION trigger_aprovacao_ftc()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  v_ficha_id UUID;
BEGIN
  -- S√≥ processar se for tipo 'aprovar'
  IF NEW.tipo = 'aprovar' THEN

    -- Buscar ID da ficha
    SELECT id INTO v_ficha_id
    FROM fichas_tecnicas
    WHERE numero_ftc = NEW.numero_ftc;

    IF v_ficha_id IS NOT NULL THEN

      -- Marcar ficha t√©cnica como aprovada
      UPDATE fichas_tecnicas
      SET
        aprovado_ftc_cliente = true,
        data_aprovacao_ftc_cliente = NOW(),
        data_ultima_edicao = NOW()
      WHERE id = v_ficha_id;

      RAISE NOTICE 'üìã Ficha T√©cnica aprovada para FTC %', NEW.numero_ftc;

      -- Tentar criar requisi√ß√£o (s√≥ cria se Or√ßamento tamb√©m aprovado)
      PERFORM criar_requisicao_apos_dupla_aprovacao(NEW.numero_ftc);
    END IF;

  END IF;

  RETURN NEW;
END;
$$;

-- Substituir trigger antigo em aprovacoes_ftc_cliente
DROP TRIGGER IF EXISTS trigger_auto_update_status_aprovado ON aprovacoes_ftc_cliente;

CREATE TRIGGER trigger_aprovacao_ftc
  AFTER INSERT ON aprovacoes_ftc_cliente
  FOR EACH ROW
  EXECUTE FUNCTION trigger_aprovacao_ftc();

COMMENT ON TRIGGER trigger_aprovacao_ftc ON aprovacoes_ftc_cliente IS
'Marca ficha t√©cnica como aprovada e verifica se pode criar requisi√ß√£o para PCP';

-- ============================================================
-- 4. REMOVER FUN√á√ÉO ANTIGA (n√£o mais necess√°ria)
-- ============================================================
DROP FUNCTION IF EXISTS auto_update_status_aprovado() CASCADE;

COMMENT ON FUNCTION criar_requisicao_apos_dupla_aprovacao IS
'Sistema de dupla aprova√ß√£o: Cliente precisa aprovar OR√áAMENTO + FICHA T√âCNICA antes do PCP receber requisi√ß√£o. Aprova√ß√µes podem ser em qualquer ordem.';
